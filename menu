#!/bin/bash
clear

myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;

flag=0

echo

function create_user() {
#myip=`dig +short myip.opendns.com @resolver1.opendns.com`
clear
echo -e ""
echo -e ""
echo -e ""
echo -e ""
useradd -e `date -d "$masaaktif days" +"%Y-%m-%d"` -s /bin/false -M $uname
exp="$(chage -l $uname | grep "Account expires" | awk -F": " '{print $2}')"
echo -e "$pass\n$pass\n"|passwd $uname &> /dev/null
echo -e "-------------------------------"
echo -e "Data Login SSH"
echo -e "-------------------------------"
echo -e "Host/IP  : $myip"
echo -e "Username : $uname" 
echo -e "Password : $pass"
echo -e "Port     : 443, 143 "
echo -e "OpenSSH  : 22 "
echo -e "Squid    : 80,8080 "
echo -e "--------------------------------"
echo -e "Aktif s/d: $exp"
echo -e "--------------------------------"
echo -e "Script by: jucky vengeance  "
myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;
echo -e "Config OVPN:                            "
echo -e "http://$myip:81/1194-client.ovpn        "
echo -e "-------------------------------------------" 
echo -e ""
echo -e ""
}
function renew_user() {
	echo "Kadaluarsa User: $uname Di Perbarui Sampai: $expdate";
	usermod -e $expdate $uname
}

function delete_user(){
	userdel $uname
}

function expired_users(){
echo "                      _\|/_      "
echo "                      (o o)      "
echo "-------------------o00-{_}-00o---"
echo "BIL  USERNAME          EXPIRED "
echo "---------------------------------"
count=1
	cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
	totalaccounts=`cat /tmp/expirelist.txt | wc -l`
	for((i=1; i<=$totalaccounts; i++ )); do
	tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
		username=`echo $tuserval | cut -f1 -d:`
		userexp=`echo $tuserval | cut -f2 -d:`
		userexpireinseconds=$(( $userexp * 86400 ))
		todaystime=`date +%s`
		expired="$(chage -l $username | grep "Account expires" | awk -F": " '{print $2}')"
		if [ $userexpireinseconds -lt $todaystime ] ; then
			printf "%-4s %-15s %-10s %-3s\n" "$count." "$username" "$expired"
			count=$((count+1))
		fi
	done
	rm /tmp/expirelist.txt
}

function not_expired_users(){
    cat /etc/shadow | cut -d: -f1,8 | sed /:$/d > /tmp/expirelist.txt
    totalaccounts=`cat /tmp/expirelist.txt | wc -l`
    for((i=1; i<=$totalaccounts; i++ )); do
        tuserval=`head -n $i /tmp/expirelist.txt | tail -n 1`
        username=`echo $tuserval | cut -f1 -d:`
        userexp=`echo $tuserval | cut -f2 -d:`
        userexpireinseconds=$(( $userexp * 86400 ))
        todaystime=`date +%s`
        if [ $userexpireinseconds -gt $todaystime ] ; then
            echo $username
        fi
    done
	rm /tmp/expirelist.txt
}

function monssh2(){
echo ""
echo "|   Tgl-Jam    | PID   |   User Name  |      Dari IP      |"
echo "-------------------------------------------------------------"
data=( `ps aux | grep -i dropbear | awk '{print $2}'`);

echo "=================[ Checking Dropbear login ]================="
echo "-------------------------------------------------------------"
for PID in "${data[@]}"
do
	#echo "check $PID";
	NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
	USER=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $10}'`;
	IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $12}'`;
	waktu=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk -F" " '{print $1,$2,$3}'`;
	if [ $NUM -eq 1 ]; then
		echo "$waktu - $PID - $USER - $IP";
	fi
done


echo "-------------------------------------------------------------"
data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);

echo "==================[ Checking OpenSSH login ]================="
echo "-------------------------------------------------------------"
for PID in "${data[@]}"
do
        #echo "check $PID";
		NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
		USER=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
		IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
		waktu=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $1,$2,$3}'`;
        if [ $NUM -eq 1 ]; then
                echo "$waktu - $PID - $USER - $IP";
        fi
done

echo "-------------------------------------------------------------"
echo -e "==============[ User Monitor Dropbear & OpenSSH]============="
}

function used_data(){
	myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`
	myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`
	ifconfig $myint | grep "RX bytes" | sed -e 's/ *RX [a-z:0-9]*/Received: /g' | sed -e 's/TX [a-z:0-9]*/\nTransfered: /g'
}

function bench-network2(){
wget freevps.us/downloads/bench.sh -O - -o /dev/null|bash
echo -e "Sekian...!!!"
}

function user-list(){
echo "--------------------------------------------------"
echo "BIL  USERNAME         EXP DATE   "
echo "--------------------------------------------------"
C=1
ON=0
OFF=0
while read mumetndase
do
        USER="$(echo $mumetndase | cut -d: -f1)"
        ID="$(echo $mumetndase | grep -v nobody | cut -d: -f3)"
        EXP="$(chage -l $USER | grep "Account expires" | awk -F": " '{print $2}')"
        ONLINE="$(cat /etc/openvpn/log.log | grep -Eom 1 $USER | grep -Eom 1 $USER)"
        if [[ $ID -ge 500 ]]; then
        if [[ -z $ONLINE ]]; then
        printf "%-4s %-15s %-10s %-3s\n" "$C." "$USER" "$EXP"
        OFF=$((OFF+1))
        else
        printf "%-4s %-15s %-10s %-3s\n" "$C." "$USER" "$EXP"
        ON=$((ON+1))
        fi
        C=$((C+1))
        fi
JUMLAH="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
done < /etc/passwd
echo "--------------------------------------------------"
echo "                                 TOTAL USER : $JUMLAH "
echo "--------------------------------------------------"
}

function lokasi(){

data=( `ps aux | grep -i dropbear | awk '{print $2}'`);

echo "User Login"  ;
echo "=================================";
echo "Username     IP" 
echo "---------------------------------"
echo "Dropbear" 
for PID in "${data[@]}"
do
    #echo "check $PID";
    NUM=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | wc -l`;
    USER=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $10}'`;
    IP=`cat /var/log/auth.log | grep -i dropbear | grep -i "Password auth succeeded" | grep "dropbear\[$PID\]" | awk '{print $12}'`;
    if [ $NUM -eq 1 ]; then
        echo "$USER - $IP";
    fi
done
echo ""
echo "OpenSSH" ;

data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);


for PID in "${data[@]}"
do
        #echo "check $PID";
        NUM=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | wc -l`;
        USER=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $9}'`;
        IP=`cat /var/log/auth.log | grep -i sshd | grep -i "Accepted password for" | grep "sshd\[$PID\]" | awk '{print $11}'`;
        if [ $NUM -eq 1 ]; then
                echo "$USER - $IP";
        fi
done
echo "-------------------------------" 
}



clear
echo ""
echo ""
echo ""
echo ""
echo "" 
echo "" 
echo "" 
echo "" 
#echo "                       ----[SELAMAT DATANG ]---"
#echo "        ====================================================="
#echo "        #           WhatsApp     : 083898587500             #"
#echo "        #                                                   #"
#echo "        #           Facebook     : fb.com/Juckyvengence     #"
#echo "        #                                                   #"
#echo "        #                                                   #"
#echo "        #          Copyright Â© Jucky vengeance  2017        #"
#echo "        ====================================================="
lolcat -F 0.3 -S 0 /root/bannermenu
date +"                    %A, %d-%m-%Y" 
date +"                            %H:%M:%S %Z" 
echo ""
PS3='Silahkan ketik nomor pilihan anda lalu tekan ENTER: '
options=("Buat User" "Buat User Trial" "Perbarui User" "Semua User" "Hapus User" "Monitor User Login" "Aktifkan Kill Multi Login" "Matikan Kill Multi Login" "User Belum Kadaluarsa" "User Sudah Kadaluarsa" "Ganti Password User" "Ganti Password VPS" "Used Data By Users" "bench-network" "Status Ram" "Bersihkan cache ram" "Bersihkan Cache Squid" "Ganti Port OpenVPN" "Ganti Port Dropbear" "Ganti Port Openssh" "Ganti Port Squid3" "Speedtest" "Edit Banner Login" "Edit Banner Menu" "Lihat Lokasi User" "Restart Webmin" "Restart Server VPS" "Restart Dropbear" "Restart OpenSSH" "Restart Squid3" "Restart OpenVPN" "Update Script VPS" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Buat User")
       read -p "Enter username: " uname
       read -p "Enter password: " pass
       read -p "Kadaluarsa (Berapa Hari): " masaaktif
       clear
       create_user
	    break
            ;;
	"Buat User Trial")
	uname=trial-`</dev/urandom tr -dc X-Z0-9 | head -c4`
	masaaktif="1"
	pass=`</dev/urandom tr -dc a-f0-9 | head -c9`
	clear
	create_user
	break
	;;
        "Perbarui User")
            read -p "Enter username yg di perbarui: " uname
            read -p "Aktif sampai tanggal Thn-Bln-Hr(YYYY-MM-DD): " expdate
            renew_user 
            break
            ;;
	 "Semua User")
	    user-list
	    break
	    ;;
        "Hapus User")
	    user-list
	    echo ""
            read -p "Ketik user (di atas) yang akan di hapus: " uname 
	    echo -e "User $uname sukses dihapus boss!!!" 
            delete_user
	    break
            ;;
	  "Monitor User Login")
	  monssh2
	  break
	  ;;
	    "Aktifkan Kill Multi Login")
	   #echo "@reboot root /root/userlimit.sh" > /etc/cron.d/userlimitreboot
	   echo "* * * * * root ./userlimit.sh 2" > /etc/cron.d/userlimit1
	   echo "* * * * * root sleep 10; ./userlimit.sh 2" > /etc/cron.d/userlimit2
           echo "* * * * * root sleep 20; ./userlimit.sh 2" > /etc/cron.d/userlimit3
           echo "* * * * * root sleep 30; ./userlimit.sh 2" > /etc/cron.d/userlimit4
           echo "* * * * * root sleep 40; ./userlimit.sh 2" > /etc/cron.d/userlimit5
           echo "* * * * * root sleep 50; ./userlimit.sh 2" > /etc/cron.d/userlimit6
	   e#cho "@reboot root /root/userlimitssh.sh" >> /etc/cron.d/userlimitreboot
	   echo "* * * * * root ./userlimitssh.sh 2" >> /etc/cron.d/userlimit1
	   echo "* * * * * root sleep 11; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit2
           echo "* * * * * root sleep 21; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit3
           echo "* * * * * root sleep 31; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit4
           echo "* * * * * root sleep 41; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit5
           echo "* * * * * root sleep 51; ./userlimitssh.sh 2" >> /etc/cron.d/userlimit6
	    service cron restart
	    service ssh restart
	    service dropbear restart
	    echo "------------+ AUTO KILL SUDAH DI AKTIFKAN BOSS +--------------" 
	    
	echo "Dasar pelit!!! user ente marah2 jangan salahkan ane ya boss
	nanti jangan lupa di matikan boss" 
		break
		;;
	"Matikan Kill Multi Login")
	rm -rf /etc/cron.d/userlimit1
	rm -rf /etc/cron.d/userlimit2
	rm -rf /etc/cron.d/userlimit3
	rm -rf /etc/cron.d/userlimit4
	rm -rf /etc/cron.d/userlimit5
	rm -rf /etc/cron.d/userlimit6
	rm -rf /etc/cron.d/userlimitreboot
	service cron restart
	    service ssh restart
	    service dropbear restart
	echo "AUTO KILL LOGIN,SUDAH SAYA MATIKAN BOS!!!" 
	break
	;;
		"User Belum Kadaluarsa")
			not_expired_users 
			break
			;;
		"User Sudah Kadaluarsa")
			expired_users 
			break
			;;		
		"Restart Server")
			reboot
			break
			;;
		"Ganti Password User")
		read -p "Ketik user yang akan di ganti passwordnya: " uname
		read -p "Silahkan isi passwordnya: " pass
		echo "$uname:$pass" | chpasswd
		echo "Mantaffff gan!!! Password $uname user ente sudah di ganti..."
		break
		;;
		"Ganti Password VPS")
		read -p "Silahkan isi password baru untuk VPS anda: " pass	
		echo "root:$pass" | chpasswd
		echo "Ciieeee.. ciieeeeeee.. abis ganti password VPS ni yeeee...!!!"
			break
			;;
		"Used Data By Users")
			used_data 
 			break
			;;
		"bench-network")
			bench-network2 
			break
			;;
	        "Status Ram")
		       free -h
		        break
	               ;;
		"Bersihkan cache ram")
		        echo "Sebelum..."
		        free -h
	                echo 3 > /proc/sys/vm/drop_caches && swapoff -a && swapon -a
			echo ""
			echo "Sesudah..." 
			free -h
			echo "SUKSES..!!!Cache ram anda sudah di bersihkan." 
		        break
			;;
		"Bersihkan Cache Squid")
		./clearcachesquid.sh
		break
		;;
		"Ganti Port OpenVPN")	
            echo "Silahkan ganti port OpenVPN anda lalu klik enter?"
            read -p "Port: " -e -i 55 PORT
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
            sed -i "s/port [0-9]*/port $PORT/" /etc/openvpn/1194.conf
	    cp /etc/openvpn/1194-client.ovpn /home/vps/public_html/1194-client.ovpn
            sed -i "s/ipserver ports/$myip $PORT/g" /home/vps/public_html/1194-client.ovpn
	    sed -i "s/ipserver/$myip/g" /home/vps/public_html/1194-client.ovpn
	   service openvpn start
	    service dropbear start
	    service ssh start
            echo "OpenVPN Updated Port: $PORT"
			break
			;;
		"Ganti Port Dropbear")	
            echo "Silahkan ganti port Dropbear anda lalu klik ENTER!!!
Port dropbear tidak boleh sama dengan port openVPN/openSSH/squid3 !!!"
           echo "Port1: 443 (Default)"
	    read -p "Port2: " -e -i 80 PORT
	    #read -p "Port3: " -e -i 143 PORT3
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
            sed -i "s/DROPBEAR_PORT=[0-9]*/DROPBEAR_PORT=$PORT/g" /etc/default/dropbear
	    #sed -i 's/DROPBEAR_EXTRA_ARGS="-p [0-9]*"/DROPBEAR_EXTRA_ARGS="-p 109"/g' /etc/default/dropbear	
            service dropbear start
	    service ssh start
	    service openvpn start
            echo "Dropbear Updated Port2 : $PORT"
	    #echo "Dropbear Updated : Port2 $PORT2" 
	    #echo "Dropbear Updated : Port3 $PORT3"
			break
			;;
	   "Ganti Port Openssh")	
            echo "Silahkan ganti port Openssh anda lalu klik enter."
            echo "Port default dan Port 2 tidak boleh sama !!!"
	    echo "Port default: 22"
	    read -p "Port 2: " -e -i 143 PORT
	    service dropbear stop
	    service ssh stop
	    service openvpn stop
	    sed -i "6s/Port [0-9]*/Port $PORT/" /etc/ssh/sshd_config
           service ssh start 
	   service dropbear start
	   service openvpn start
            echo "Openssh Updated Port: $PORT"
			break
			;;
        "Ganti Port Squid3")	
            echo "Silahkan ganti port Squid3 anda lalu klik enter"
	    echo "Isi dengan angka tidak boleh huruf !!!"
	    read -p "Port Squid3: " -e -i 8080 PORT
            #sed -i 's/http_port [0-9]*\nhttp_port [0-9]*/http_port $PORT1\nhttp_port $PORT2/g' /etc/squid3/squid.conf
            sed -i "s/http_port [0-9]*/http_port $PORT/" /etc/squid3/squid.conf
	   service squid3 restart
            echo "Squid3 Updated Port: $PORT"
			break
			;;
			"Speedtest")
			python speedtest.py --share 
			break		
			;;
	"Edit Banner Login")
	echo -e "1. Simpan text (CTRL + X, lalu ketik Y dan tekan Enter)
2. Membatalkan edit text (CTRL + X, lalu ketik N dan tekan Enter)" 
	read -p "Tekan ENTER untuk melanjutkan........................ " 
	nano /bannerssh
	service ssh restart &&  service dropbear restart
	break
	;;
	"Edit Banner Menu")
	echo -e "1. Simpan text (CTRL + X, lalu ketik Y dan tekan ENTER)" 
	echo -e "2. Membatalkan edit text (CTRL + X,lalu ketik N dan tekan ENTER)" 
	echo ""
	read -p "Tekan ENTER untuk melanjutkan..................."
	nano /root/bannermenu
	menu
	break
	;;
	"Lihat Lokasi User")
	lokasi
	echo "Contoh: 112.123.345.126 lalu Enter"
read -p "Ketik Salah Satu Alamat IP User: " userip
curl ipinfo.io/$userip
break
;;
         "Restart Webmin")
	 service webmin restart
	 echo "Webmin sudah di restart boss!!!" 
	 break
	 ;;
	       "Restart Server VPS")
	 reboot
	 echo "sudah di restart tunggu sebentar ya boss!!!" 
	 break
	 ;;
	       "Restart Dropbear")
	 service dropbear restart
	 echo "Dropbear sudah di restart boss!!!" 
	 break
	 ;;
	       "Restart OpenSSH")
	 service ssh restart
	 echo "OpenSSH sudah di restart boss!!!" 
	 break
	 ;;
	       "Restart OpenVPN")
	 service openvpn restart
	 echo "openvpn sudah di restart boss!!!" 
	 break
	 ;;
	       "Restart Squid3")
	 service squid3 restart
	 echo "Squid3 sudah di restart boss!!!" 
	 break
	 ;;
	 "Update Script VPS")
	 /usr/local/bin/menu-update-script-vps.sh
	 break
	 ;;
		"Quit")
		
		break
		;;
	 
        *) echo invalid option;
	esac
done
